{
  "openapi": "3.0.3",
  "info": {
    "title": "public_api",
    "version": "0.1"
  },
  "paths": {
    "/authentication/account-confirm-email/": {
      "post": {
        "operationId": "authentication_account_confirm_email_create",
        "summary": "Verify email",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAuthDetail"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/account-confirm-email/{key}/": {
      "post": {
        "operationId": "authentication_account_confirm_email_create_token_key",
        "description": "Confirms email address using key from path.",
        "summary": "Create Authentication Verify Email",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyEmailResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/login/": {
      "post": {
        "operationId": "authentication_login_create",
        "description": "Check the credentials and return the REST Token\nif the credentials are valid and authenticated.\nCalls Django Auth login method to register User ID\nin Django session framework\n\nAccept the following POST parameters: username, password\nReturn the REST Framework Token Object's key.",
        "summary": "Login users",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/loginRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/loginRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JWT"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/logout/": {
      "post": {
        "operationId": "authentication_logout_create",
        "description": "Calls Django logout method and delete the Token object\nassigned to the current User object.\n\nAccepts/Returns nothing.",
        "summary": "Logout users",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAuthDetail"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/password/change/": {
      "post": {
        "operationId": "authentication_password_change_create",
        "description": "Calls Django Auth SetPasswordForm save method.\n\nAccepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message.",
        "summary": "Change user password",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChangeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChangeRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChangeRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAuthDetail"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/password/reset/": {
      "post": {
        "operationId": "authentication_password_reset_create",
        "description": "Calls Django Auth PasswordResetForm save method.\n\nAccepts the following POST parameters: email\nReturns the success/fail message.",
        "summary": "Reset user password",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAuthDetail"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/password/reset-confirm/{uidb64}/{token}/": {
      "post": {
        "operationId": "authentication_password_reset_confirm_create_token_key",
        "description": "Confirms and resets password to the one specified in payload.",
        "summary": "Create Authentication Confirm Password Reset",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "uidb64",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CustomPasswordResetConfirmRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomPasswordResetConfirmRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CustomPasswordResetConfirmRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomPasswordResetConfirm"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/profile/educator/": {
      "get": {
        "operationId": "authentication_profile_educator_list",
        "summary": "List Profile : Educator Educator Profile",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "user__email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Profile : Educator"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEducatorProfileList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/profile/educator/{user}/": {
      "get": {
        "operationId": "authentication_profile_educator_retrieve",
        "summary": "Retrieve Profile : Educator Educator Profile",
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Profile : Educator"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducatorProfile"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "authentication_profile_educator_update",
        "summary": "Update Profile : Educator Educator Profile",
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Profile : Educator"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EducatorProfileRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducatorProfileRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EducatorProfileRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducatorProfile"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "authentication_profile_educator_partial_update",
        "summary": "Partial Update Profile : Educator Educator Profile",
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Profile : Educator"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEducatorProfileRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEducatorProfileRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEducatorProfileRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducatorProfile"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/profile/kindergarten/": {
      "get": {
        "operationId": "authentication_profile_kindergarten_list",
        "summary": "List Profile : Kindergarten Kindergarten Profile",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Profile : Kindergarten"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedKindergartenProfileReadList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/profile/kindergarten/{user}/": {
      "get": {
        "operationId": "authentication_profile_kindergarten_retrieve",
        "summary": "Retrieve Profile : Kindergarten Kindergarten Profile",
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Profile : Kindergarten"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KindergartenProfileRead"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "authentication_profile_kindergarten_update",
        "summary": "Update Profile : Kindergarten Kindergarten Profile",
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Profile : Kindergarten"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/KindergartenProfileRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KindergartenProfileRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/KindergartenProfileRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KindergartenProfile"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "authentication_profile_kindergarten_partial_update",
        "summary": "Partial Update Profile : Kindergarten Kindergarten Profile",
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Profile : Kindergarten"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedKindergartenProfileRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedKindergartenProfileRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedKindergartenProfileRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KindergartenProfile"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/profile/kindergarten/public_settings/{profile__user}/": {
      "get": {
        "operationId": "authentication_profile_kindergarten_public_settings_retrieve",
        "summary": "Retrieve Profile : Kindergarten Kindergarten Public Profile Settings",
        "parameters": [
          {
            "in": "path",
            "name": "profile__user",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Profile : Kindergarten"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KindergartenProfile_Settings"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "authentication_profile_kindergarten_public_settings_update",
        "summary": "Update Profile : Kindergarten Kindergarten Public Profile Settings",
        "parameters": [
          {
            "in": "path",
            "name": "profile__user",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Profile : Kindergarten"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/KindergartenProfile_SettingsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KindergartenProfile_SettingsRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/KindergartenProfile_SettingsRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KindergartenProfile_Settings"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "authentication_profile_kindergarten_public_settings_partial_update",
        "summary": "Partial Update Profile : Kindergarten Kindergarten Public Profile Settings",
        "parameters": [
          {
            "in": "path",
            "name": "profile__user",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Profile : Kindergarten"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedKindergartenProfile_SettingsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedKindergartenProfile_SettingsRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedKindergartenProfile_SettingsRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KindergartenProfile_Settings"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/profile/parent/": {
      "get": {
        "operationId": "authentication_profile_parent_list",
        "summary": "List Profile : Parent Parent Profile",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "user__email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Profile : Parent"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedParentProfileList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/profile/parent/{id}/": {
      "get": {
        "operationId": "authentication_profile_parent_retrieve",
        "summary": "Retrieve Profile : Parent Parent Profile",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this parent profile.",
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Profile : Parent"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParentProfile"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "authentication_profile_parent_update",
        "summary": "Update Profile : Parent Parent Profile",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this parent profile.",
            "required": true
          }
        ],
        "tags": [
          "Profile : Parent"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ParentProfileRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParentProfileRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ParentProfileRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParentProfile"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "authentication_profile_parent_partial_update",
        "summary": "Partial Update Profile : Parent Parent Profile",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this parent profile.",
            "required": true
          }
        ],
        "tags": [
          "Profile : Parent"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedParentProfileRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedParentProfileRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedParentProfileRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParentProfile"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/register/educator/": {
      "post": {
        "operationId": "authentication_register_educator_create",
        "summary": "Create Registration : Educator Register a new Educator.",
        "tags": [
          "Registration : Educator"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EducatorRegistrationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducatorRegistrationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EducatorRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducatorRegistration"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/register/family/": {
      "post": {
        "operationId": "authentication_register_family_create",
        "description": "Register a new Family.",
        "summary": "Create Registration : Family Register a new Family with both parents.",
        "tags": [
          "Registration : Family"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FamilyRegistrationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FamilyRegistrationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FamilyRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "Unspecified response body"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/register/family_invite_parent2/": {
      "post": {
        "operationId": "authentication_register_family_invite_parent2_create",
        "description": "Register a Family.",
        "summary": "Create Registration : Family Register a new Family with 1 parent and invite the second parent.",
        "tags": [
          "Registration : Family"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FamilyRegistrationInviteSecondParentRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FamilyRegistrationInviteSecondParentRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FamilyRegistrationInviteSecondParentRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "Unspecified response body"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/register/invite_parent2/": {
      "post": {
        "operationId": "authentication_register_invite_parent2_create",
        "description": "Invite second parent to existing family by providing email or automatically resend invitation if the one already exists. Can be done only by Parent or Kindergarten. Kindergarten needs to have Inscription with specified family. Parent needs to be a part of specified family. Family must not have second parent set.",
        "summary": "Create Registration : Parent Invitation Invite second parent to existing family.",
        "tags": [
          "Registration : Parent Invitation"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ParentInvitationInitiateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParentInvitationInitiateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ParentInvitationInitiateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Invitation created successfully"
          },
          "410": {
            "description": "Already accepted or key expired"
          }
        }
      }
    },
    "/authentication/register/invite_parent2/{key}/confirmed": {
      "get": {
        "operationId": "authentication_register_invite_parent2_confirmed_retrieve_token_key",
        "summary": "List Registration : Parent Invitation Confirms the invitation of parent when invited by the Parent or Kindergarten",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Registration : Parent Invitation"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmParentInvitation"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/register/invite_parent2/invitations": {
      "get": {
        "operationId": "authentication_register_invite_parent2_invitations_list",
        "summary": "List Registration : Parent Invitation Invite second parent to existing family.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Registration : Parent Invitation"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedParentInvitationInfoList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/register/invite_parent2/reinvite/{id}": {
      "put": {
        "operationId": "authentication_register_invite_parent2_reinvite_update",
        "description": "List the invitations to join a Family made by the Parent or Kindergarten user who requests them.",
        "summary": "Update Registration : Parent Invitation List the invitations to join a Family made by the Parent or Kindergarten user who requests them.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Registration : Parent Invitation"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation updated successfully"
          },
          "403": {
            "description": "Forbidden"
          },
          "410": {
            "description": "Already accepted or key expired"
          }
        }
      },
      "patch": {
        "operationId": "authentication_register_invite_parent2_reinvite_partial_update",
        "description": "List the invitations to join a Family made by the Parent or Kindergarten user who requests them.",
        "summary": "Partial Update Registration : Parent Invitation List the invitations to join a Family made by the Parent or Kindergarten user who requests them.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Registration : Parent Invitation"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation updated successfully"
          },
          "403": {
            "description": "Forbidden"
          },
          "410": {
            "description": "Already accepted or key expired"
          }
        }
      }
    },
    "/authentication/register/kindergarten/": {
      "post": {
        "operationId": "authentication_register_kindergarten_create",
        "summary": "Create Registration : Kindergarten Register a new Kindergarten.",
        "tags": [
          "Registration : Kindergarten"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/KindergartenRegistrationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KindergartenRegistrationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/KindergartenRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KindergartenRegistration"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/register/kindergarten_initiated/educator": {
      "post": {
        "operationId": "authentication_register_kindergarten_initiated_educator_create",
        "description": "BACK-89 : The Kindergarten can create a new Educator if the email provided is not yet registered, or add a new educator if the email provided is already registered. This also creates a contract between the Kindergarten and the Educator. Once the new educator is logged in, they can accept or terminate the contract.",
        "summary": "Create Registration : Kindergarten initiated Educator Create or add a new educator by kindergarten.",
        "tags": [
          "Registration : Kindergarten initiated Educator"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EducatorContractRegistrationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducatorContractRegistrationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EducatorContractRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Educator created successfully"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/authentication/register/kindergarten_initiated/educator/{key}/confirmed": {
      "get": {
        "operationId": "authentication_register_kindergarten_initiated_educator_confirmed_retrieve_token_key",
        "summary": "List Registration : Kindergarten initiated Educator Confirm the new Educator account by the Educator.",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Registration : Kindergarten initiated Educator"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmEducatorSignup"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/register/kindergarten_initiated/educator/{token}": {
      "post": {
        "operationId": "authentication_register_kindergarten_initiated_educator_create_token_key",
        "description": "BACK-89 : Educator can create a new password for the new account using the token provided in 'EducatorSignupByKindergartenConfirmed'.",
        "summary": "Create Registration : Kindergarten initiated Educator Educator invitations initiated by Kindergarten.",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Registration : Kindergarten initiated Educator"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FinalizeEducatorSignupRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinalizeEducatorSignupRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FinalizeEducatorSignupRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Educator account finalized successfully"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/authentication/register/kindergarten_initiated/educator/invitations/": {
      "get": {
        "operationId": "authentication_register_kindergarten_initiated_educator_invitations_list",
        "summary": "List Registration : Kindergarten initiated Educator Check invitations sent by the Kindergarten to the Educator",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Registration : Kindergarten initiated Educator"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEducatorSignupByKindergartenListList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/register/kindergarten_initiated/educator/reinvite_educator/{id}": {
      "patch": {
        "operationId": "authentication_register_kindergarten_initiated_educator_reinvite_educator_partial_update",
        "summary": "Partial Update Registration : Kindergarten initiated Educator Resend educator signup confirmation by the Kindergarten",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Registration : Kindergarten initiated Educator"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/authentication/register/kindergarten_initiated/family": {
      "post": {
        "operationId": "authentication_register_kindergarten_initiated_family_create",
        "description": "Kindergarten can create a new family together with Inscription.",
        "summary": "Create Registration : Kindergarten initiated Family Kindergarten initiates new Family invitation.",
        "tags": [
          "Registration : Kindergarten initiated Family"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/InscriptionRegistrationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InscriptionRegistrationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/InscriptionRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Family registration successful"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/authentication/register/kindergarten_initiated/family/{key}/confirmed": {
      "get": {
        "operationId": "authentication_register_kindergarten_initiated_family_confirmed_retrieve_token_key",
        "summary": "List Registration : Kindergarten initiated Family Family confirms invitation by Kindergarten.",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Registration : Kindergarten initiated Family"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmParentSignup"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/register/kindergarten_initiated/family/{token}": {
      "post": {
        "operationId": "authentication_register_kindergarten_initiated_family_create_token_key",
        "description": "Parent can set up a new password for the account created by Kindergarten using the token from the account confirmation.",
        "summary": "Create Registration : Kindergarten initiated Family Parent fills new password for the new account.",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Registration : Kindergarten initiated Family"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FinalizeParentSignupRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinalizeParentSignupRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FinalizeParentSignupRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Password setup successful"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/authentication/register/kindergarten_initiated/family/invitations/": {
      "get": {
        "operationId": "authentication_register_kindergarten_initiated_family_invitations_list",
        "summary": "List Registration : Kindergarten initiated Family Check invitations sent by the Kindergarten to the Parent.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Registration : Kindergarten initiated Family"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFamilySignupByKindergartenListList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/register/kindergarten_initiated/family/reinvite_family/{inscription}": {
      "patch": {
        "operationId": "authentication_register_kindergarten_initiated_family_reinvite_family_partial_update",
        "summary": "Partial Update Registration : Kindergarten initiated Family Resend parent signup confirmation by the Kindergarten to all parents of Family.",
        "parameters": [
          {
            "in": "path",
            "name": "inscription",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Registration : Kindergarten initiated Family"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/authentication/register/kindergarten_initiated/family/reinvite_parent/{id}": {
      "patch": {
        "operationId": "authentication_register_kindergarten_initiated_family_reinvite_parent_partial_update",
        "summary": "Partial Update Registration : Kindergarten initiated Family Resend parent signup confirmation by the Kindergarten.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Registration : Kindergarten initiated Family"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/authentication/register/parent2/{token}/": {
      "post": {
        "operationId": "authentication_register_parent2_create_token_key",
        "description": "Register a new Parent.",
        "summary": "Create Registration : Parent Invitation Register a new Parent after being invited by Parent or Kindergarten.",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "description": "Invitation token",
            "required": true
          }
        ],
        "tags": [
          "Registration : Parent Invitation"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ParentInvitationRegistrationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParentInvitationRegistrationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ParentInvitationRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Verification e-mail sent."
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/authentication/resend-email-confirmation/": {
      "post": {
        "operationId": "authentication_resend_email_confirmation_create",
        "description": "Resend email verification.",
        "summary": "Create Authentication Resend Email",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CustomResendEmailVerificationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomResendEmailVerificationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CustomResendEmailVerificationRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          },
          {}
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResendEmailVerification"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/token/refresh/": {
      "post": {
        "operationId": "authentication_token_refresh_create",
        "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
        "summary": "Refresh token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefresh"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/authentication/token/verify/": {
      "post": {
        "operationId": "authentication_token_verify_create",
        "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
        "summary": "Verify token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerifyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerifyRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerifyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenVerifyResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/child/": {
      "get": {
        "operationId": "child_child_list",
        "summary": "List Child Child",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Child"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedChildList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "child_child_create",
        "summary": "Create Child Child",
        "tags": [
          "Child"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChildRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChildRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Child"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/child/{id}/": {
      "get": {
        "operationId": "child_child_retrieve",
        "summary": "Retrieve Child Child",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this child.",
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Child"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Child"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "child_child_update",
        "summary": "Update Child Child",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this child.",
            "required": true
          }
        ],
        "tags": [
          "Child"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChildRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChildRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Child"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "child_child_partial_update",
        "summary": "Partial Update Child Child",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this child.",
            "required": true
          }
        ],
        "tags": [
          "Child"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Child"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "child_child_destroy",
        "summary": "Delete Child Child",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this child.",
            "required": true
          }
        ],
        "tags": [
          "Child"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/child/child_notes/": {
      "get": {
        "operationId": "child_child_notes_list",
        "summary": "List Child : Child Note Child Note",
        "parameters": [
          {
            "in": "query",
            "name": "child_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Child : Child Note"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedChildNotesList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "child_child_notes_create",
        "summary": "Create Child : Child Note Child Note",
        "tags": [
          "Child : Child Note"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChildNotesRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildNotesRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChildNotesRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildNotes"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/child_notes/{id}/": {
      "get": {
        "operationId": "child_child_notes_retrieve",
        "summary": "Retrieve Child : Child Note Child Note",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this child notes.",
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Child : Child Note"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildNotes"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "child_child_notes_update",
        "summary": "Update Child : Child Note Child Note",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this child notes.",
            "required": true
          }
        ],
        "tags": [
          "Child : Child Note"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChildNotesRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildNotesRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChildNotesRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildNotes"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "child_child_notes_partial_update",
        "summary": "Partial Update Child : Child Note Child Note",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this child notes.",
            "required": true
          }
        ],
        "tags": [
          "Child : Child Note"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildNotesRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildNotesRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildNotesRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildNotes"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "child_child_notes_destroy",
        "summary": "Delete Child : Child Note Child Note",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this child notes.",
            "required": true
          }
        ],
        "tags": [
          "Child : Child Note"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/child/medical_file/": {
      "get": {
        "operationId": "child_medical_file_list",
        "summary": "List Child : Medical File Medical File",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Child : Medical File"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedChildMedicalFileList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/medical_file/{child}/": {
      "get": {
        "operationId": "child_medical_file_retrieve",
        "summary": "Retrieve Child : Medical File Medical File",
        "parameters": [
          {
            "in": "path",
            "name": "child",
            "schema": {
              "type": "integer"
            },
            "description": "A unique value identifying this child medical file.",
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Child : Medical File"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFile"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/medical_file/allergy/": {
      "get": {
        "operationId": "child_medical_file_allergy_list",
        "summary": "List Child : Medical File : Allergy Allergy",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Child : Medical File : Allergy"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedChildMedicalFileAllergyList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "child_medical_file_allergy_create",
        "summary": "Create Child : Medical File : Allergy Allergy",
        "tags": [
          "Child : Medical File : Allergy"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileAllergyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileAllergyRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileAllergyRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileAllergy"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/medical_file/allergy/{id}/": {
      "get": {
        "operationId": "child_medical_file_allergy_retrieve",
        "summary": "Retrieve Child : Medical File : Allergy Allergy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this allergy.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Allergy"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileAllergy"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "child_medical_file_allergy_update",
        "summary": "Update Child : Medical File : Allergy Allergy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this allergy.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Allergy"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileAllergyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileAllergyRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileAllergyRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileAllergy"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "child_medical_file_allergy_partial_update",
        "summary": "Partial Update Child : Medical File : Allergy Allergy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this allergy.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Allergy"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildMedicalFileAllergyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildMedicalFileAllergyRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildMedicalFileAllergyRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileAllergy"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "child_medical_file_allergy_destroy",
        "summary": "Delete Child : Medical File : Allergy Allergy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this allergy.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Allergy"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/child/medical_file/default_allergy/": {
      "get": {
        "operationId": "child_medical_file_default_allergy_list",
        "summary": "List Child : Medical File : Allergy Default Allergy",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Child : Medical File : Allergy"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedChildMedicalFileDefaultAllergyList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/medical_file/default_allergy/{id}/": {
      "get": {
        "operationId": "child_medical_file_default_allergy_retrieve",
        "summary": "Retrieve Child : Medical File : Allergy Default Allergy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this default allergy.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Allergy"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileDefaultAllergy"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/medical_file/default_medical_condition/": {
      "get": {
        "operationId": "child_medical_file_default_medical_condition_list",
        "summary": "List Child : Medical File : Medical Condition Default Medical Condition",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Child : Medical File : Medical Condition"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedChildMedicalFileDefaultMedicalConditionList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/medical_file/default_medical_condition/{id}/": {
      "get": {
        "operationId": "child_medical_file_default_medical_condition_retrieve",
        "summary": "Retrieve Child : Medical File : Medical Condition Default Medical Condition",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this default medical condition.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Medical Condition"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileDefaultMedicalCondition"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/medical_file/default_medication/": {
      "get": {
        "operationId": "child_medical_file_default_medication_list",
        "summary": "List Child : Medical File : Medication Default Medication",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Child : Medical File : Medication"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedChildMedicalFileDefaultMedicationList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/medical_file/default_medication/{id}/": {
      "get": {
        "operationId": "child_medical_file_default_medication_retrieve",
        "summary": "Retrieve Child : Medical File : Medication Default Medication",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this default medication.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Medication"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileDefaultMedication"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/medical_file/medical_condition/": {
      "get": {
        "operationId": "child_medical_file_medical_condition_list",
        "summary": "List Child : Medical File : Medical Condition Medical Condition",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Child : Medical File : Medical Condition"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedChildMedicalFileMedicalConditionList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "child_medical_file_medical_condition_create",
        "summary": "Create Child : Medical File : Medical Condition Medical Condition",
        "tags": [
          "Child : Medical File : Medical Condition"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileMedicalConditionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileMedicalConditionRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileMedicalConditionRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileMedicalCondition"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/medical_file/medical_condition/{id}/": {
      "get": {
        "operationId": "child_medical_file_medical_condition_retrieve",
        "summary": "Retrieve Child : Medical File : Medical Condition Medical Condition",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this medical condition.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Medical Condition"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileMedicalCondition"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "child_medical_file_medical_condition_update",
        "summary": "Update Child : Medical File : Medical Condition Medical Condition",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this medical condition.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Medical Condition"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileMedicalConditionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileMedicalConditionRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileMedicalConditionRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileMedicalCondition"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "child_medical_file_medical_condition_partial_update",
        "summary": "Partial Update Child : Medical File : Medical Condition Medical Condition",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this medical condition.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Medical Condition"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildMedicalFileMedicalConditionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildMedicalFileMedicalConditionRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildMedicalFileMedicalConditionRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileMedicalCondition"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "child_medical_file_medical_condition_destroy",
        "summary": "Delete Child : Medical File : Medical Condition Medical Condition",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this medical condition.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Medical Condition"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/child/medical_file/medication/": {
      "get": {
        "operationId": "child_medical_file_medication_list",
        "summary": "List Child : Medical File : Medication Medication",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Child : Medical File : Medication"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedChildMedicalFileMedicationList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "child_medical_file_medication_create",
        "summary": "Create Child : Medical File : Medication Medication",
        "tags": [
          "Child : Medical File : Medication"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileMedicationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileMedicationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileMedicationRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileMedication"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/child/medical_file/medication/{id}/": {
      "get": {
        "operationId": "child_medical_file_medication_retrieve",
        "summary": "Retrieve Child : Medical File : Medication Medication",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this medication.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Medication"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileMedication"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "child_medical_file_medication_update",
        "summary": "Update Child : Medical File : Medication Medication",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this medication.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Medication"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileMedicationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileMedicationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChildMedicalFileMedicationRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileMedication"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "child_medical_file_medication_partial_update",
        "summary": "Partial Update Child : Medical File : Medication Medication",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this medication.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Medication"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildMedicalFileMedicationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildMedicalFileMedicationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedChildMedicalFileMedicationRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildMedicalFileMedication"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "child_medical_file_medication_destroy",
        "summary": "Delete Child : Medical File : Medication Medication",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this medication.",
            "required": true
          }
        ],
        "tags": [
          "Child : Medical File : Medication"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/contracts/create_inscription_with_new_child/": {
      "post": {
        "operationId": "contracts_create_inscription_with_new_child_create",
        "summary": "Create Contract : Inscription Contract Inscription Contract with New Child",
        "tags": [
          "Contract : Inscription Contract"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/InscriptionNewChildRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InscriptionNewChildRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/InscriptionNewChildRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InscriptionNewChild"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/contracts/default_actions/": {
      "get": {
        "operationId": "contracts_default_actions_list",
        "summary": "List Contract : Default values Actions",
        "tags": [
          "Contract : Default values"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/contracts/default_statuses/": {
      "get": {
        "operationId": "contracts_default_statuses_list",
        "summary": "List Contract : Default values Statuses",
        "tags": [
          "Contract : Default values"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/contracts/educator_contract/": {
      "get": {
        "operationId": "contracts_educator_contract_list",
        "summary": "List Contract : Educator Contract Educator Contract",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Contract : Educator Contract"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEducatorContractList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "contracts_educator_contract_create",
        "summary": "Create Contract : Educator Contract Educator Contract",
        "tags": [
          "Contract : Educator Contract"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EducatorContractRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducatorContractRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EducatorContractRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducatorContract"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/contracts/educator_contract/{id}/": {
      "get": {
        "operationId": "contracts_educator_contract_retrieve",
        "summary": "Retrieve Contract : Educator Contract Educator Contract",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this educator contract.",
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Contract : Educator Contract"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducatorContract"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "contracts_educator_contract_update",
        "summary": "Update Contract : Educator Contract Educator Contract",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this educator contract.",
            "required": true
          }
        ],
        "tags": [
          "Contract : Educator Contract"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EducatorContractUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducatorContractUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EducatorContractUpdateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducatorContractUpdate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "contracts_educator_contract_partial_update",
        "summary": "Partial Update Contract : Educator Contract Educator Contract",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this educator contract.",
            "required": true
          }
        ],
        "tags": [
          "Contract : Educator Contract"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEducatorContractUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEducatorContractUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEducatorContractUpdateRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducatorContractUpdate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/contracts/inscription/": {
      "get": {
        "operationId": "contracts_inscription_list",
        "summary": "List Contract : Inscription Contract Inscription Contract",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Contract : Inscription Contract"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedInscriptionList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "contracts_inscription_create",
        "summary": "Create Contract : Inscription Contract Inscription Contract",
        "tags": [
          "Contract : Inscription Contract"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/InscriptionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InscriptionRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/InscriptionRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inscription"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/contracts/inscription/{id}/": {
      "get": {
        "operationId": "contracts_inscription_retrieve",
        "summary": "Retrieve Contract : Inscription Contract Inscription Contract",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this inscription.",
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Contract : Inscription Contract"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inscription"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "contracts_inscription_update",
        "summary": "Update Contract : Inscription Contract Inscription Contract",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this inscription.",
            "required": true
          }
        ],
        "tags": [
          "Contract : Inscription Contract"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/InscriptionUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InscriptionUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/InscriptionUpdateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InscriptionUpdate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "contracts_inscription_partial_update",
        "summary": "Partial Update Contract : Inscription Contract Inscription Contract",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this inscription.",
            "required": true
          }
        ],
        "tags": [
          "Contract : Inscription Contract"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedInscriptionUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedInscriptionUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedInscriptionUpdateRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InscriptionUpdate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/family/family/": {
      "get": {
        "operationId": "family_family_list",
        "summary": "List Family Family",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Family"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFamilyList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/family/family/{id}/": {
      "get": {
        "operationId": "family_family_retrieve",
        "summary": "Retrieve Family Family",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this family.",
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Family"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Family"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/family/trusted_person/": {
      "get": {
        "operationId": "family_trusted_person_list",
        "summary": "List Family : Trusted Person Trusted Person",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Family : Trusted Person"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTrustedPersonList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "family_trusted_person_create",
        "summary": "Create Family : Trusted Person Trusted Person",
        "tags": [
          "Family : Trusted Person"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TrustedPersonRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrustedPersonRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TrustedPersonRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustedPerson"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/family/trusted_person/{id}/": {
      "get": {
        "operationId": "family_trusted_person_retrieve",
        "summary": "Retrieve Family : Trusted Person Trusted Person",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this trusted person.",
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Family : Trusted Person"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustedPerson"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "family_trusted_person_update",
        "summary": "Update Family : Trusted Person Trusted Person",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this trusted person.",
            "required": true
          }
        ],
        "tags": [
          "Family : Trusted Person"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TrustedPersonRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrustedPersonRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TrustedPersonRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustedPerson"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "family_trusted_person_partial_update",
        "summary": "Partial Update Family : Trusted Person Trusted Person",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this trusted person.",
            "required": true
          }
        ],
        "tags": [
          "Family : Trusted Person"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedTrustedPersonRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedTrustedPersonRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedTrustedPersonRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustedPerson"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "family_trusted_person_destroy",
        "summary": "Delete Family : Trusted Person Trusted Person",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this trusted person.",
            "required": true
          }
        ],
        "tags": [
          "Family : Trusted Person"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/media/upload_signature/": {
      "post": {
        "operationId": "media_upload_signature_create",
        "description": "Confirm the signed-up family by Kindergarten using the email invitation.",
        "summary": "Create Media : Upload Signature Get upload signature",
        "tags": [
          "Media : Upload Signature"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Upload Signature"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/notifications/": {
      "get": {
        "operationId": "notifications_list",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Notification"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedNotificationSerializerUserReadOnlyList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "notifications_create",
        "tags": [
          "Notification"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSerializerCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSerializerCreateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSerializerCreateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSerializerCreate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/publications/comments/": {
      "get": {
        "operationId": "publications_comments_list",
        "summary": "List Publications Comments",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Publications"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCommentList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "publications_comments_create",
        "summary": "Create Publications Comments",
        "tags": [
          "Publications"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CommentRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CommentRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/publications/comments/{id}/": {
      "get": {
        "operationId": "publications_comments_retrieve",
        "summary": "Retrieve Publications Comments",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this comment.",
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Publications"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "publications_comments_update",
        "summary": "Update Publications Comments",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this comment.",
            "required": true
          }
        ],
        "tags": [
          "Publications"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CommentSerializerUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentSerializerUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CommentSerializerUpdateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentSerializerUpdate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "publications_comments_partial_update",
        "summary": "Partial Update Publications Comments",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this comment.",
            "required": true
          }
        ],
        "tags": [
          "Publications"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCommentSerializerUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCommentSerializerUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCommentSerializerUpdateRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentSerializerUpdate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "publications_comments_destroy",
        "summary": "Delete Publications Comments",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this comment.",
            "required": true
          }
        ],
        "tags": [
          "Publications"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/publications/docs/content/": {
      "get": {
        "operationId": "publications_docs_content_list",
        "summary": "List Publications Document Only Publications",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Publications"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDocOnlyPublicationContentList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/publications/publications/": {
      "get": {
        "operationId": "publications_publications_list",
        "summary": "List Publications Publication",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Publications"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPublicationList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "publications_publications_create",
        "summary": "Create Publications Publication",
        "tags": [
          "Publications"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PublicationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PublicationRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Publication"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/publications/publications/{id}/": {
      "get": {
        "operationId": "publications_publications_retrieve",
        "summary": "Retrieve Publications Publication",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this publication.",
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the fields to include in the response."
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Expands."
          }
        ],
        "tags": [
          "Publications"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Publication"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "publications_publications_update",
        "summary": "Update Publications Publication",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this publication.",
            "required": true
          }
        ],
        "tags": [
          "Publications"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PublicationUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicationUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PublicationUpdateRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicationUpdate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "publications_publications_partial_update",
        "summary": "Partial Update Publications Publication",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this publication.",
            "required": true
          }
        ],
        "tags": [
          "Publications"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPublicationUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPublicationUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPublicationUpdateRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicationUpdate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "publications_publications_destroy",
        "summary": "Delete Publications Publication",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this publication.",
            "required": true
          }
        ],
        "tags": [
          "Publications"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/publications/qa_user_votes/": {
      "post": {
        "operationId": "publications_qa_user_votes_create",
        "summary": "Create Publications QA votes",
        "tags": [
          "Publications"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/QAUserVoteRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QAUserVoteRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/QAUserVoteRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QAUserVote"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/publications/qa_user_votes/{id}/": {
      "delete": {
        "operationId": "publications_qa_user_votes_destroy",
        "summary": "Delete Publications QA votes",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this qa user vote.",
            "required": true
          }
        ],
        "tags": [
          "Publications"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/publications/reactions/comment_reactions/": {
      "post": {
        "operationId": "publications_reactions_comment_reactions_create",
        "summary": "Create Publications Comment Reactions",
        "tags": [
          "Publications"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CommentReactionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentReactionRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CommentReactionRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentReaction"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/publications/reactions/comment_reactions/{id}/": {
      "delete": {
        "operationId": "publications_reactions_comment_reactions_destroy",
        "summary": "Delete Publications Comment Reactions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this comment reaction.",
            "required": true
          }
        ],
        "tags": [
          "Publications"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/publications/reactions/publication_reactions/": {
      "post": {
        "operationId": "publications_reactions_publication_reactions_create",
        "summary": "Create Publications Publication Reactions",
        "tags": [
          "Publications"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PublicationReactionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicationReactionRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PublicationReactionRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicationReaction"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/publications/reactions/publication_reactions/{id}/": {
      "delete": {
        "operationId": "publications_reactions_publication_reactions_destroy",
        "summary": "Delete Publications Publication Reactions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this publication reaction.",
            "required": true
          }
        ],
        "tags": [
          "Publications"
        ],
        "security": [
          {
            "jwtHeaderAuth": []
          },
          {
            "jwtCookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Actor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "user_type": {
            "type": "string",
            "title": "Type",
            "maxLength": 50
          }
        },
        "required": [
          "id",
          "name",
          "user_type"
        ]
      },
      "ActorRequest": {
        "type": "object",
        "properties": {
          "user_type": {
            "type": "string",
            "minLength": 1,
            "title": "Type",
            "maxLength": 50
          }
        },
        "required": [
          "user_type"
        ]
      },
      "Address": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "street": {
            "type": "string",
            "maxLength": 80
          },
          "number": {
            "type": "string",
            "nullable": true,
            "maxLength": 10
          },
          "zip_code": {
            "type": "string",
            "title": "Zipcode",
            "maxLength": 10
          },
          "city": {
            "type": "string",
            "maxLength": 80
          },
          "province": {
            "type": "string",
            "maxLength": 80
          },
          "country": {
            "type": "string",
            "maxLength": 80
          }
        },
        "required": [
          "city",
          "country",
          "province",
          "street",
          "zip_code"
        ]
      },
      "AddressRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "street": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "number": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "maxLength": 10
          },
          "zip_code": {
            "type": "string",
            "minLength": 1,
            "title": "Zipcode",
            "maxLength": 10
          },
          "city": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "province": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "country": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        },
        "required": [
          "city",
          "country",
          "province",
          "street",
          "zip_code"
        ]
      },
      "BaseProfile_Signature": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "image": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "date",
          "image"
        ]
      },
      "BaseProfile_SignatureRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "image": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "image"
        ]
      },
      "BaseProfile_User": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email address",
            "maxLength": 254
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "signature": {
            "$ref": "#/components/schemas/BaseProfile_Signature"
          },
          "is_email_verified": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": [
          "email",
          "id",
          "is_email_verified",
          "signature"
        ]
      },
      "BaseProfile_UserRequest": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "title": "Email address",
            "maxLength": 254
          },
          "signature": {
            "$ref": "#/components/schemas/BaseProfile_SignatureRequest"
          }
        },
        "required": [
          "email",
          "signature"
        ]
      },
      "Child": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "deleted": {
            "type": "boolean",
            "readOnly": true
          },
          "family": {
            "type": "integer"
          },
          "first_name": {
            "type": "string",
            "maxLength": 100
          },
          "last_name": {
            "type": "string",
            "maxLength": 100
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "medical_file": {
            "$ref": "#/components/schemas/ChildMedicalFile"
          }
        },
        "required": [
          "birth_date",
          "deleted",
          "family",
          "first_name",
          "id",
          "last_name",
          "medical_file",
          "sex"
        ]
      },
      "ChildCareTypeEnum": {
        "enum": [
          "Centre de la petite enfance",
          "Garderie Non Subventionnée",
          "Garderie Subventionnée",
          "Garderie au Milieu Familiale"
        ],
        "type": "string",
        "description": "* `Centre de la petite enfance` - Centre de la petite enfance\n* `Garderie Non Subventionnée` - Garderie Non Subventionnée\n* `Garderie Subventionnée` - Garderie Subventionnée\n* `Garderie au Milieu Familiale` - Garderie au Milieu Familiale"
      },
      "ChildMedicalFile": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "medications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMedicalFileMedication"
            }
          },
          "allergies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMedicalFileAllergy"
            }
          },
          "medical_conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMedicalFileMedicalCondition"
            }
          }
        },
        "required": [
          "allergies",
          "medical_conditions",
          "medications"
        ]
      },
      "ChildMedicalFileAllergy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 128
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityEnum"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "severity"
        ]
      },
      "ChildMedicalFileAllergyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "maxLength": 128
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityEnum"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "comments": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          }
        },
        "required": [
          "name",
          "severity"
        ]
      },
      "ChildMedicalFileDefaultAllergy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 128
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityEnum"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "severity"
        ]
      },
      "ChildMedicalFileDefaultMedicalCondition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityEnum"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "severity"
        ]
      },
      "ChildMedicalFileDefaultMedication": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 128
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ChildMedicalFileMedicalCondition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityEnum"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "severity"
        ]
      },
      "ChildMedicalFileMedicalConditionRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityEnum"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "comments": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          }
        },
        "required": [
          "name",
          "severity"
        ]
      },
      "ChildMedicalFileMedication": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 128
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ChildMedicalFileMedicationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "maxLength": 128
          },
          "description": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "comments": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          }
        },
        "required": [
          "name"
        ]
      },
      "ChildMedicalFileRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "medications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMedicalFileMedicationRequest"
            }
          },
          "allergies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMedicalFileAllergyRequest"
            }
          },
          "medical_conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMedicalFileMedicalConditionRequest"
            }
          }
        },
        "required": [
          "allergies",
          "medical_conditions",
          "medications"
        ]
      },
      "ChildNotes": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "child": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "actor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Actor"
              }
            ],
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "actor",
          "child",
          "description",
          "id",
          "timestamp"
        ]
      },
      "ChildNotesRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "child": {
            "type": "integer"
          },
          "description": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "child",
          "description"
        ]
      },
      "ChildRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "family": {
            "type": "integer"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "medical_file": {
            "$ref": "#/components/schemas/ChildMedicalFileRequest"
          }
        },
        "required": [
          "birth_date",
          "family",
          "first_name",
          "last_name",
          "medical_file",
          "sex"
        ]
      },
      "Comment": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "type": "integer",
            "readOnly": true
          },
          "publication": {
            "type": "integer"
          },
          "parent_comment": {
            "type": "integer",
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "date_modified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "content": {
            "type": "string"
          },
          "tag_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagUser"
            }
          },
          "tag_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagGroup"
            }
          },
          "reactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentReaction"
            },
            "readOnly": true
          },
          "deleted": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": [
          "content",
          "date_created",
          "date_modified",
          "deleted",
          "id",
          "publication",
          "reactions",
          "user"
        ]
      },
      "CommentReaction": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "type": "integer",
            "readOnly": true
          },
          "comment": {
            "type": "integer"
          },
          "reaction": {
            "$ref": "#/components/schemas/ReactionEnum"
          }
        },
        "required": [
          "comment",
          "id",
          "reaction",
          "user"
        ]
      },
      "CommentReactionRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "comment": {
            "type": "integer"
          },
          "reaction": {
            "$ref": "#/components/schemas/ReactionEnum"
          }
        },
        "required": [
          "comment",
          "reaction"
        ]
      },
      "CommentRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "publication": {
            "type": "integer"
          },
          "parent_comment": {
            "type": "integer",
            "nullable": true
          },
          "content": {
            "type": "string",
            "minLength": 1
          },
          "tag_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagUserRequest"
            }
          },
          "tag_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagGroupRequest"
            }
          }
        },
        "required": [
          "content",
          "publication"
        ]
      },
      "CommentSerializerUpdate": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "type": "integer",
            "readOnly": true
          },
          "publication": {
            "type": "integer",
            "readOnly": true
          },
          "parent_comment": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "date_modified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "content": {
            "type": "string"
          },
          "tag_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagUser"
            }
          },
          "tag_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagGroup"
            }
          },
          "reactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentReaction"
            },
            "readOnly": true
          },
          "deleted": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": [
          "content",
          "date_created",
          "date_modified",
          "deleted",
          "id",
          "parent_comment",
          "publication",
          "reactions",
          "user"
        ]
      },
      "CommentSerializerUpdateRequest": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "content": {
            "type": "string",
            "minLength": 1
          },
          "tag_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagUserRequest"
            }
          },
          "tag_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagGroupRequest"
            }
          }
        },
        "required": [
          "content"
        ]
      },
      "ConfirmEducatorSignup": {
        "type": "object",
        "properties": {
          "educator": {
            "type": "integer"
          },
          "key": {
            "type": "string",
            "maxLength": 64
          }
        },
        "required": [
          "educator",
          "key"
        ]
      },
      "ConfirmParentInvitation": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 320
          },
          "inviter": {
            "type": "integer",
            "nullable": true
          },
          "family": {
            "type": "integer",
            "nullable": true
          },
          "key": {
            "type": "string",
            "maxLength": 64
          }
        },
        "required": [
          "email",
          "key"
        ]
      },
      "ConfirmParentSignup": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "integer"
          },
          "key": {
            "type": "string",
            "maxLength": 64
          }
        },
        "required": [
          "key",
          "parent"
        ]
      },
      "CustomPasswordResetConfirm": {
        "type": "object",
        "description": "Serializer for confirming a password reset attempt.",
        "properties": {
          "new_password1": {
            "type": "string",
            "maxLength": 128
          },
          "new_password2": {
            "type": "string",
            "maxLength": 128
          }
        },
        "required": [
          "new_password1",
          "new_password2"
        ]
      },
      "CustomPasswordResetConfirmRequest": {
        "type": "object",
        "description": "Serializer for confirming a password reset attempt.",
        "properties": {
          "new_password1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          },
          "new_password2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          }
        },
        "required": [
          "new_password1",
          "new_password2"
        ]
      },
      "CustomResendEmailVerification": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "CustomResendEmailVerificationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          }
        },
        "required": [
          "email"
        ]
      },
      "CustomUserDetails": {
        "type": "object",
        "description": "User model w/o password",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email address",
            "maxLength": 254
          },
          "user_type": {
            "type": "string",
            "title": "Type",
            "maxLength": 50
          },
          "tenant_url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "email",
          "pk",
          "tenant_url",
          "user_type"
        ]
      },
      "DaySummaryPublicationContent": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_Question"
            }
          }
        },
        "required": [
          "content",
          "questions"
        ]
      },
      "DocOnlyPublicationContent": {
        "type": "object",
        "properties": {
          "post_content": {
            "$ref": "#/components/schemas/PostPublicationContent"
          },
          "incident_content": {
            "$ref": "#/components/schemas/IncidentPublicationContent"
          },
          "poll_content": {
            "$ref": "#/components/schemas/PollPublicationContent"
          },
          "day_summary_content": {
            "$ref": "#/components/schemas/DaySummaryPublicationContent"
          }
        },
        "required": [
          "day_summary_content",
          "incident_content",
          "poll_content",
          "post_content"
        ]
      },
      "Educator": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email address",
            "maxLength": 254
          },
          "is_email_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "educatorprofile": {
            "readOnly": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EducatorProfile"
              },
              {
                "type": "integer"
              }
            ]
          }
        },
        "required": [
          "educatorprofile",
          "email",
          "id",
          "is_email_verified"
        ]
      },
      "EducatorContract": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "kindergarten": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/KindergartenProfile"
              },
              {
                "type": "integer"
              }
            ]
          },
          "educator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EducatorProfile"
              },
              {
                "type": "integer"
              }
            ]
          },
          "accepted_kindergarten": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "accepted_educator": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "terminated_kindergarten": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "terminated_educator": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "status": {
            "type": "string",
            "readOnly": true
          },
          "possible_next_actions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        },
        "required": [
          "accepted_educator",
          "accepted_kindergarten",
          "educator",
          "end_date",
          "id",
          "kindergarten",
          "possible_next_actions",
          "start_date",
          "status",
          "terminated_educator",
          "terminated_kindergarten"
        ]
      },
      "EducatorContractRegistrationRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "educator": {
            "writeOnly": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EducatorProfileRequest"
              },
              {
                "type": "integer"
              }
            ]
          },
          "status_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusActionEnum"
              }
            ],
            "writeOnly": true
          },
          "status_date": {
            "type": "string",
            "format": "date-time",
            "writeOnly": true
          }
        },
        "required": [
          "educator",
          "status_action",
          "status_date"
        ]
      },
      "EducatorContractRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "kindergarten": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/KindergartenProfileRequest"
              },
              {
                "type": "integer"
              }
            ]
          },
          "educator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EducatorProfileRequest"
              },
              {
                "type": "integer"
              }
            ]
          },
          "status_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusActionEnum"
              }
            ],
            "writeOnly": true
          },
          "status_date": {
            "type": "string",
            "format": "date-time",
            "writeOnly": true
          }
        },
        "required": [
          "educator",
          "kindergarten",
          "status_action",
          "status_date"
        ]
      },
      "EducatorContractUpdate": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "kindergarten": {
            "readOnly": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/KindergartenProfile"
              },
              {
                "type": "integer"
              }
            ]
          },
          "educator": {
            "readOnly": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EducatorProfile"
              },
              {
                "type": "integer"
              }
            ]
          },
          "accepted_kindergarten": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "accepted_educator": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "terminated_kindergarten": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "terminated_educator": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "status": {
            "type": "string",
            "readOnly": true
          },
          "possible_next_actions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        },
        "required": [
          "accepted_educator",
          "accepted_kindergarten",
          "educator",
          "end_date",
          "id",
          "kindergarten",
          "possible_next_actions",
          "start_date",
          "status",
          "terminated_educator",
          "terminated_kindergarten"
        ]
      },
      "EducatorContractUpdateRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "status_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusActionEnum"
              }
            ],
            "writeOnly": true
          },
          "status_date": {
            "type": "string",
            "format": "date-time",
            "writeOnly": true
          }
        },
        "required": [
          "status_action",
          "status_date"
        ]
      },
      "EducatorProfile": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "$ref": "#/components/schemas/Educator"
          },
          "phone": {
            "$ref": "#/components/schemas/Phone"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "date_joined": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "address",
          "birth_date",
          "first_name",
          "id",
          "last_name",
          "phone",
          "sex",
          "user"
        ]
      },
      "EducatorProfileRequest": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/EducatorRequest"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "date_joined": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "address",
          "birth_date",
          "first_name",
          "last_name",
          "phone",
          "sex",
          "user"
        ]
      },
      "EducatorRegistration": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/EducatorUserRegistration"
          },
          "phone": {
            "$ref": "#/components/schemas/Phone"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "address",
          "birth_date",
          "first_name",
          "last_name",
          "phone",
          "sex",
          "user"
        ]
      },
      "EducatorRegistrationRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/EducatorUserRegistrationRequest"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "address",
          "birth_date",
          "first_name",
          "last_name",
          "phone",
          "sex",
          "user"
        ]
      },
      "EducatorRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "title": "Email address",
            "maxLength": 254
          },
          "password1": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "password2": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          }
        },
        "required": [
          "email",
          "password1",
          "password2"
        ]
      },
      "EducatorSignupByKindergartenList": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "educator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Educator"
              },
              {
                "type": "integer"
              }
            ]
          },
          "accepted": {
            "type": "boolean"
          },
          "sent": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "educator",
          "id"
        ]
      },
      "EducatorUserRegistration": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email address",
            "maxLength": 254
          }
        },
        "required": [
          "email"
        ]
      },
      "EducatorUserRegistrationRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "title": "Email address",
            "maxLength": 254
          },
          "password1": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "password2": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          }
        },
        "required": [
          "email",
          "password1",
          "password2"
        ]
      },
      "Family": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "children": {
            "items": {
              "type": "integer"
            },
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Child"
                }
              },
              {
                "type": "integer"
              }
            ]
          },
          "trusted_person": {
            "items": {
              "type": "integer"
            },
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TrustedPerson"
                }
              },
              {
                "type": "integer"
              }
            ]
          },
          "parent1": {
            "readOnly": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Parent"
              },
              {
                "type": "integer"
              }
            ]
          },
          "parent2": {
            "readOnly": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Parent"
              },
              {
                "type": "integer"
              }
            ]
          },
          "family_inscriptions": {
            "items": {
              "type": "integer"
            },
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Inscription"
                }
              },
              {
                "type": "integer"
              }
            ]
          }
        },
        "required": [
          "children",
          "family_inscriptions",
          "id",
          "parent1",
          "parent2",
          "trusted_person"
        ]
      },
      "FamilyRegistrationInviteSecondParentRequest": {
        "type": "object",
        "properties": {
          "parent1": {
            "$ref": "#/components/schemas/ParentRegistrationRequest"
          },
          "parent2_email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          }
        },
        "required": [
          "parent1",
          "parent2_email"
        ]
      },
      "FamilyRegistrationRequest": {
        "type": "object",
        "properties": {
          "parent1": {
            "$ref": "#/components/schemas/ParentRegistrationRequest"
          },
          "parent2": {
            "$ref": "#/components/schemas/ParentRegistrationRequest"
          },
          "primary_contact": {
            "$ref": "#/components/schemas/PrimaryContactEnum"
          }
        },
        "required": [
          "parent1",
          "primary_contact"
        ]
      },
      "FamilyRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "trusted_person": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "family_inscriptions": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "children",
          "family_inscriptions",
          "trusted_person"
        ]
      },
      "FamilySignupByKindergartenList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "parent1_signup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ParentSignupByKindergartenList"
              }
            ],
            "readOnly": true
          },
          "parent2_signup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ParentSignupByKindergartenList"
              }
            ],
            "readOnly": true
          },
          "kindergarten": {
            "type": "integer"
          },
          "inscription": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "inscription",
          "kindergarten",
          "parent1_signup",
          "parent2_signup"
        ]
      },
      "File": {
        "title": "File",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "file": {
            "title": "File",
            "type": "string"
          },
          "file_type": {
            "$ref": "#/components/schemas/FileTypes"
          }
        },
        "required": [
          "name",
          "file",
          "file_type"
        ]
      },
      "FileCollection": {
        "title": "FileCollection",
        "type": "object",
        "properties": {
          "files": {
            "title": "Files",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File"
            }
          }
        },
        "required": [
          "files"
        ]
      },
      "FinalizeEducatorSignupRequest": {
        "type": "object",
        "properties": {
          "password1": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "password2": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          }
        },
        "required": [
          "password1",
          "password2"
        ]
      },
      "FinalizeParentSignupRequest": {
        "type": "object",
        "properties": {
          "password1": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "password2": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          }
        },
        "required": [
          "password1",
          "password2"
        ]
      },
      "IncidentPublicationContent": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "required": [
          "content"
        ]
      },
      "Inscription": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "family": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Family"
              },
              {
                "type": "integer"
              }
            ]
          },
          "parent1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ParentProfile"
              }
            ],
            "readOnly": true
          },
          "parent2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ParentProfile"
              }
            ],
            "readOnly": true
          },
          "kindergarten": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/KindergartenProfile"
              },
              {
                "type": "integer"
              }
            ]
          },
          "child": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Child"
              },
              {
                "type": "integer"
              }
            ]
          },
          "schedule": {
            "$ref": "#/components/schemas/_InscriptionWeeklyChildSchedule"
          },
          "accepted_kindergarten": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "accepted_parent": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "terminated_kindergarten": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "terminated_parent": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "status": {
            "type": "string",
            "readOnly": true
          },
          "possible_next_actions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        },
        "required": [
          "accepted_kindergarten",
          "accepted_parent",
          "child",
          "end_date",
          "family",
          "id",
          "kindergarten",
          "parent1",
          "parent2",
          "possible_next_actions",
          "schedule",
          "start_date",
          "status",
          "terminated_kindergarten",
          "terminated_parent"
        ]
      },
      "InscriptionNewChild": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "family": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Family"
              },
              {
                "type": "integer"
              }
            ]
          },
          "parent1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ParentProfile"
              }
            ],
            "readOnly": true
          },
          "parent2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ParentProfile"
              }
            ],
            "readOnly": true
          },
          "kindergarten": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/KindergartenProfile"
              },
              {
                "type": "integer"
              }
            ]
          },
          "child": {
            "$ref": "#/components/schemas/_InscriptionChild",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Child"
              },
              {
                "type": "integer"
              }
            ]
          },
          "schedule": {
            "$ref": "#/components/schemas/_InscriptionWeeklyChildSchedule"
          },
          "accepted_kindergarten": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "accepted_parent": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "terminated_kindergarten": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "terminated_parent": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "status": {
            "type": "string",
            "readOnly": true
          },
          "possible_next_actions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        },
        "required": [
          "accepted_kindergarten",
          "accepted_parent",
          "child",
          "end_date",
          "family",
          "id",
          "kindergarten",
          "parent1",
          "parent2",
          "possible_next_actions",
          "schedule",
          "start_date",
          "status",
          "terminated_kindergarten",
          "terminated_parent"
        ]
      },
      "InscriptionNewChildRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "family": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FamilyRequest"
              },
              {
                "type": "integer"
              }
            ]
          },
          "kindergarten": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/KindergartenProfileRequest"
              },
              {
                "type": "integer"
              }
            ]
          },
          "child": {
            "$ref": "#/components/schemas/_InscriptionChildRequest",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChildRequest"
              },
              {
                "type": "integer"
              }
            ]
          },
          "schedule": {
            "$ref": "#/components/schemas/_InscriptionWeeklyChildScheduleRequest"
          },
          "status_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusActionEnum"
              }
            ],
            "writeOnly": true
          },
          "status_date": {
            "type": "string",
            "format": "date-time",
            "writeOnly": true
          }
        },
        "required": [
          "child",
          "family",
          "kindergarten",
          "schedule",
          "status_action",
          "status_date"
        ]
      },
      "InscriptionRegistrationRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "family": {
            "$ref": "#/components/schemas/_InscriptionRegistrationFamilyRequest",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FamilyRequest"
              },
              {
                "type": "integer"
              }
            ]
          },
          "child": {
            "$ref": "#/components/schemas/_InscriptionChildRequest",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChildRequest"
              },
              {
                "type": "integer"
              }
            ]
          },
          "schedule": {
            "$ref": "#/components/schemas/_InscriptionWeeklyChildScheduleRequest"
          },
          "status_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusActionEnum"
              }
            ],
            "writeOnly": true
          },
          "status_date": {
            "type": "string",
            "format": "date-time",
            "writeOnly": true
          }
        },
        "required": [
          "child",
          "family",
          "schedule",
          "status_action",
          "status_date"
        ]
      },
      "InscriptionRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "family": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FamilyRequest"
              },
              {
                "type": "integer"
              }
            ]
          },
          "kindergarten": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/KindergartenProfileRequest"
              },
              {
                "type": "integer"
              }
            ]
          },
          "child": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChildRequest"
              },
              {
                "type": "integer"
              }
            ]
          },
          "schedule": {
            "$ref": "#/components/schemas/_InscriptionWeeklyChildScheduleRequest"
          },
          "status_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusActionEnum"
              }
            ],
            "writeOnly": true
          },
          "status_date": {
            "type": "string",
            "format": "date-time",
            "writeOnly": true
          }
        },
        "required": [
          "child",
          "family",
          "kindergarten",
          "schedule",
          "status_action",
          "status_date"
        ]
      },
      "InscriptionUpdate": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "family": {
            "readOnly": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Family"
              },
              {
                "type": "integer"
              }
            ]
          },
          "parent1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ParentProfile"
              }
            ],
            "readOnly": true
          },
          "parent2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ParentProfile"
              }
            ],
            "readOnly": true
          },
          "kindergarten": {
            "readOnly": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/KindergartenProfile"
              },
              {
                "type": "integer"
              }
            ]
          },
          "child": {
            "readOnly": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Child"
              },
              {
                "type": "integer"
              }
            ]
          },
          "schedule": {
            "$ref": "#/components/schemas/_InscriptionWeeklyChildSchedule"
          },
          "accepted_kindergarten": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "accepted_parent": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "terminated_kindergarten": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "terminated_parent": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "status": {
            "type": "string",
            "readOnly": true
          },
          "possible_next_actions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        },
        "required": [
          "accepted_kindergarten",
          "accepted_parent",
          "child",
          "end_date",
          "family",
          "id",
          "kindergarten",
          "parent1",
          "parent2",
          "possible_next_actions",
          "schedule",
          "start_date",
          "status",
          "terminated_kindergarten",
          "terminated_parent"
        ]
      },
      "InscriptionUpdateRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "schedule": {
            "$ref": "#/components/schemas/_InscriptionWeeklyChildScheduleRequest"
          },
          "status_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusActionEnum"
              }
            ],
            "writeOnly": true
          },
          "status_date": {
            "type": "string",
            "format": "date-time",
            "writeOnly": true
          }
        },
        "required": [
          "schedule",
          "status_action",
          "status_date"
        ]
      },
      "JWT": {
        "type": "object",
        "description": "Serializer for JWT authentication.",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/CustomUserDetails"
          }
        },
        "required": [
          "access_token",
          "refresh_token",
          "user"
        ]
      },
      "KindEnum": {
        "enum": [
          "LANDLINE",
          "CELLPHONE"
        ],
        "type": "string",
        "description": "* `LANDLINE` - LANDLINE\n* `CELLPHONE` - CELLPHONE"
      },
      "KindergartenProfile": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "phone": {
            "$ref": "#/components/schemas/Phone"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phone_1": {
            "$ref": "#/components/schemas/Phone"
          },
          "phone_2": {
            "$ref": "#/components/schemas/Phone"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "email_1": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "maxLength": 254
          },
          "email_2": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "maxLength": 254
          },
          "child_care_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChildCareTypeEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "website": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "maxLength": 200
          },
          "presentation_of_kindergarten": {
            "type": "string",
            "nullable": true
          },
          "description_of_services": {
            "type": "string",
            "nullable": true
          },
          "educational_program": {
            "type": "string",
            "nullable": true
          },
          "service_schedule": {
            "$ref": "#/components/schemas/KindergartenProfile_ServiceSchedule"
          },
          "tariffs": {
            "$ref": "#/components/schemas/KindergartenProfile_Tariffs"
          },
          "typical_day": {
            "$ref": "#/components/schemas/KindergartenProfile_TypicalDay"
          },
          "menu": {
            "type": "string",
            "nullable": true
          },
          "classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_Class"
            }
          },
          "places_availability": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_PlacesAvailability"
            }
          },
          "accomodation_for_special_kids": {
            "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodation",
            "oneOf": [
              {
                "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodation"
              },
              {
                "type": "integer"
              }
            ]
          },
          "admission_policy": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/BaseProfile_User"
          },
          "gallery_images": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileCollection"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "address",
          "name",
          "phone"
        ]
      },
      "KindergartenProfileRead": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "user_id": {
            "type": "integer",
            "readOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/Phone"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phone_1": {
            "$ref": "#/components/schemas/Phone"
          },
          "phone_2": {
            "$ref": "#/components/schemas/Phone"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "email_1": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "maxLength": 254
          },
          "email_2": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "maxLength": 254
          },
          "child_care_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChildCareTypeEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "website": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "maxLength": 200
          },
          "presentation_of_kindergarten": {
            "type": "string",
            "nullable": true
          },
          "description_of_services": {
            "type": "string",
            "nullable": true
          },
          "educational_program": {
            "type": "string",
            "nullable": true
          },
          "groups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KindergartenProfile_Group"
              }
            ],
            "readOnly": true
          },
          "service_schedule": {
            "$ref": "#/components/schemas/KindergartenProfile_ServiceSchedule"
          },
          "tariffs": {
            "$ref": "#/components/schemas/KindergartenProfile_Tariffs"
          },
          "typical_day": {
            "$ref": "#/components/schemas/KindergartenProfile_TypicalDay"
          },
          "menu": {
            "type": "string",
            "nullable": true
          },
          "classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_Class"
            }
          },
          "places_availability": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_PlacesAvailability"
            }
          },
          "accomodation_for_special_kids": {
            "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodation",
            "oneOf": [
              {
                "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodation"
              },
              {
                "type": "integer"
              }
            ]
          },
          "admission_policy": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "address",
          "groups",
          "name",
          "phone",
          "user_id"
        ]
      },
      "KindergartenProfileRequest": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "phone_1": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "phone_2": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "email_1": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "minLength": 1,
            "maxLength": 254
          },
          "email_2": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "minLength": 1,
            "maxLength": 254
          },
          "child_care_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChildCareTypeEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "website": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "minLength": 1,
            "maxLength": 200
          },
          "presentation_of_kindergarten": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "description_of_services": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "educational_program": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "service_schedule": {
            "$ref": "#/components/schemas/KindergartenProfile_ServiceScheduleRequest"
          },
          "tariffs": {
            "$ref": "#/components/schemas/KindergartenProfile_TariffsRequest"
          },
          "typical_day": {
            "$ref": "#/components/schemas/KindergartenProfile_TypicalDayRequest"
          },
          "menu": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_ClassRequest"
            }
          },
          "places_availability": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_PlacesAvailabilityRequest"
            }
          },
          "accomodation_for_special_kids": {
            "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodationRequest",
            "oneOf": [
              {
                "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodationRequest"
              },
              {
                "type": "integer"
              }
            ]
          },
          "admission_policy": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "user": {
            "$ref": "#/components/schemas/BaseProfile_UserRequest"
          },
          "gallery_images": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileCollection"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "address",
          "name",
          "phone"
        ]
      },
      "KindergartenProfile_Class": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "age_min": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "age_max": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "name": {
            "type": "string",
            "maxLength": 128
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "educator_name": {
            "type": "string"
          },
          "main_image": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "gallery_images": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileCollection"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "age_max",
          "age_min",
          "educator_name",
          "id",
          "name"
        ]
      },
      "KindergartenProfile_ClassRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "age_min": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "age_max": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          },
          "description": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "educator_name": {
            "type": "string",
            "minLength": 1
          },
          "main_image": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "gallery_images": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileCollection"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "age_max",
          "age_min",
          "educator_name",
          "name"
        ]
      },
      "KindergartenProfile_Group": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "age_min": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "age_max": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "capacity": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          }
        },
        "required": [
          "age_max",
          "age_min",
          "capacity",
          "name"
        ]
      },
      "KindergartenProfile_PaymentAgeConfiguration": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "start_age": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "end_age": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "price": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 1
          }
        },
        "required": [
          "end_age",
          "id",
          "price",
          "start_age"
        ]
      },
      "KindergartenProfile_PaymentAgeConfigurationRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "start_age": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "end_age": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "price": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 1
          }
        },
        "required": [
          "end_age",
          "price",
          "start_age"
        ]
      },
      "KindergartenProfile_PaymentOtherConfiguration": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "price": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 1
          }
        },
        "required": [
          "id",
          "price"
        ]
      },
      "KindergartenProfile_PaymentOtherConfigurationRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "price": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 1
          }
        },
        "required": [
          "price"
        ]
      },
      "KindergartenProfile_PaymentSpecialConditionConfiguration": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "price": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 1
          },
          "condition": {
            "type": "integer"
          }
        },
        "required": [
          "condition",
          "id",
          "price"
        ]
      },
      "KindergartenProfile_PaymentSpecialConditionConfigurationRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "price": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 1
          },
          "condition": {
            "type": "integer"
          }
        },
        "required": [
          "condition",
          "price"
        ]
      },
      "KindergartenProfile_PlacesAvailability": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "age_min": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "age_max": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "title": {
            "type": "string",
            "maxLength": 30
          },
          "free_places": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          }
        },
        "required": [
          "age_max",
          "age_min",
          "free_places",
          "id",
          "title"
        ]
      },
      "KindergartenProfile_PlacesAvailabilityRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "age_min": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "age_max": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 30
          },
          "free_places": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          }
        },
        "required": [
          "age_max",
          "age_min",
          "free_places",
          "title"
        ]
      },
      "KindergartenProfile_ServiceSchedule": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "monday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "monday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "tuesday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "tuesday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "wednesday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "wednesday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "thursday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "thursday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "friday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "friday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "saturday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "saturday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "sunday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "sunday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "KindergartenProfile_ServiceScheduleRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "monday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "monday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "tuesday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "tuesday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "wednesday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "wednesday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "thursday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "thursday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "friday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "friday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "saturday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "saturday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "sunday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "sunday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "KindergartenProfile_Settings": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "email_1": {
            "type": "boolean"
          },
          "email_2": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "address": {
            "type": "boolean"
          },
          "phone_1": {
            "type": "boolean"
          },
          "phone_2": {
            "type": "boolean"
          },
          "website": {
            "type": "boolean"
          },
          "presentation_of_kindergarten": {
            "type": "boolean"
          },
          "description_of_services": {
            "type": "boolean"
          },
          "educational_program": {
            "type": "boolean"
          },
          "typical_day": {
            "type": "boolean"
          },
          "menu": {
            "type": "boolean"
          },
          "classes": {
            "type": "boolean"
          },
          "places_availability": {
            "type": "boolean"
          },
          "accomodation_for_special_kids": {
            "type": "boolean"
          },
          "admission_policy": {
            "type": "boolean"
          },
          "service_schedule": {
            "type": "boolean"
          },
          "tariffs": {
            "type": "boolean"
          }
        }
      },
      "KindergartenProfile_SettingsRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "email_1": {
            "type": "boolean"
          },
          "email_2": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "address": {
            "type": "boolean"
          },
          "phone_1": {
            "type": "boolean"
          },
          "phone_2": {
            "type": "boolean"
          },
          "website": {
            "type": "boolean"
          },
          "presentation_of_kindergarten": {
            "type": "boolean"
          },
          "description_of_services": {
            "type": "boolean"
          },
          "educational_program": {
            "type": "boolean"
          },
          "typical_day": {
            "type": "boolean"
          },
          "menu": {
            "type": "boolean"
          },
          "classes": {
            "type": "boolean"
          },
          "places_availability": {
            "type": "boolean"
          },
          "accomodation_for_special_kids": {
            "type": "boolean"
          },
          "admission_policy": {
            "type": "boolean"
          },
          "service_schedule": {
            "type": "boolean"
          },
          "tariffs": {
            "type": "boolean"
          }
        }
      },
      "KindergartenProfile_SpecialKidsAccomodation": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "accepted_allergies": {
            "items": {
              "type": "integer"
            },
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodationAllergy"
                }
              },
              {
                "type": "integer"
              }
            ]
          },
          "accepted_diseases": {
            "items": {
              "type": "integer"
            },
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodationDisease"
                }
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "KindergartenProfile_SpecialKidsAccomodationAllergy": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "deleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 128
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityEnum"
          },
          "medical_file": {
            "type": "integer",
            "nullable": true
          },
          "created_by_kindergarten": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "severity"
        ]
      },
      "KindergartenProfile_SpecialKidsAccomodationAllergyRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "maxLength": 128
          },
          "description": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "comments": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityEnum"
          },
          "medical_file": {
            "type": "integer",
            "nullable": true
          },
          "created_by_kindergarten": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "name",
          "severity"
        ]
      },
      "KindergartenProfile_SpecialKidsAccomodationDisease": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "deleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 128
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityEnum"
          },
          "medical_file": {
            "type": "integer",
            "nullable": true
          },
          "created_by_kindergarten": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "severity"
        ]
      },
      "KindergartenProfile_SpecialKidsAccomodationDiseaseRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "maxLength": 128
          },
          "description": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "comments": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityEnum"
          },
          "medical_file": {
            "type": "integer",
            "nullable": true
          },
          "created_by_kindergarten": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "name",
          "severity"
        ]
      },
      "KindergartenProfile_SpecialKidsAccomodationRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "accepted_allergies": {
            "items": {
              "type": "integer"
            },
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodationAllergyRequest"
                }
              },
              {
                "type": "integer"
              }
            ]
          },
          "accepted_diseases": {
            "items": {
              "type": "integer"
            },
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodationDiseaseRequest"
                }
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "KindergartenProfile_Tariffs": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "payment_age_configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_PaymentAgeConfiguration"
            }
          },
          "payment_special_condition_configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_PaymentSpecialConditionConfiguration"
            }
          },
          "payment_other_configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_PaymentOtherConfiguration"
            }
          }
        },
        "required": [
          "payment_age_configurations",
          "payment_other_configurations",
          "payment_special_condition_configurations"
        ]
      },
      "KindergartenProfile_TariffsRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "payment_age_configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_PaymentAgeConfigurationRequest"
            }
          },
          "payment_special_condition_configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_PaymentSpecialConditionConfigurationRequest"
            }
          },
          "payment_other_configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_PaymentOtherConfigurationRequest"
            }
          }
        },
        "required": [
          "payment_age_configurations",
          "payment_other_configurations",
          "payment_special_condition_configurations"
        ]
      },
      "KindergartenProfile_TypicalDay": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_TypicalDayEvent"
            }
          }
        },
        "required": [
          "events"
        ]
      },
      "KindergartenProfile_TypicalDayEvent": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "start_hour": {
            "type": "string",
            "format": "time"
          },
          "end_hour": {
            "type": "string",
            "format": "time"
          },
          "description": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "end_hour",
          "id",
          "start_hour",
          "title"
        ]
      },
      "KindergartenProfile_TypicalDayEventRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "start_hour": {
            "type": "string",
            "format": "time"
          },
          "end_hour": {
            "type": "string",
            "format": "time"
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "title": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "description",
          "end_hour",
          "start_hour",
          "title"
        ]
      },
      "KindergartenProfile_TypicalDayRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_TypicalDayEventRequest"
            }
          }
        },
        "required": [
          "events"
        ]
      },
      "KindergartenRegistration": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/KindergartenUserRegistration"
          },
          "phone": {
            "$ref": "#/components/schemas/Phone"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phone_1": {
            "$ref": "#/components/schemas/Phone"
          },
          "phone_2": {
            "$ref": "#/components/schemas/Phone"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "email_1": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "maxLength": 254
          },
          "email_2": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "maxLength": 254
          },
          "child_care_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChildCareTypeEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "website": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "maxLength": 200
          },
          "presentation_of_kindergarten": {
            "type": "string",
            "nullable": true
          },
          "description_of_services": {
            "type": "string",
            "nullable": true
          },
          "educational_program": {
            "type": "string",
            "nullable": true
          },
          "service_schedule": {
            "$ref": "#/components/schemas/KindergartenProfile_ServiceSchedule"
          },
          "tariffs": {
            "$ref": "#/components/schemas/KindergartenProfile_Tariffs"
          },
          "typical_day": {
            "$ref": "#/components/schemas/KindergartenProfile_TypicalDay"
          },
          "menu": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/KindergartenProfile_Settings"
          },
          "classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_Class"
            }
          },
          "places_availability": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_PlacesAvailability"
            }
          },
          "accomodation_for_special_kids": {
            "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodation"
          },
          "admission_policy": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "address",
          "name",
          "phone",
          "settings",
          "user"
        ]
      },
      "KindergartenRegistrationRequest": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/KindergartenUserRegistrationRequest"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "phone_1": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "phone_2": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "email_1": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "minLength": 1,
            "maxLength": 254
          },
          "email_2": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "minLength": 1,
            "maxLength": 254
          },
          "child_care_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChildCareTypeEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "website": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "minLength": 1,
            "maxLength": 200
          },
          "presentation_of_kindergarten": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "description_of_services": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "educational_program": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "service_schedule": {
            "$ref": "#/components/schemas/KindergartenProfile_ServiceScheduleRequest"
          },
          "tariffs": {
            "$ref": "#/components/schemas/KindergartenProfile_TariffsRequest"
          },
          "typical_day": {
            "$ref": "#/components/schemas/KindergartenProfile_TypicalDayRequest"
          },
          "menu": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "settings": {
            "$ref": "#/components/schemas/KindergartenProfile_SettingsRequest"
          },
          "classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_ClassRequest"
            }
          },
          "places_availability": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_PlacesAvailabilityRequest"
            }
          },
          "accomodation_for_special_kids": {
            "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodationRequest"
          },
          "admission_policy": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          }
        },
        "required": [
          "address",
          "name",
          "phone",
          "settings",
          "user"
        ]
      },
      "KindergartenUserRegistration": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email address",
            "maxLength": 254
          }
        },
        "required": [
          "email"
        ]
      },
      "KindergartenUserRegistrationRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "title": "Email address",
            "maxLength": 254
          },
          "password1": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "password2": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          }
        },
        "required": [
          "email",
          "password1",
          "password2"
        ]
      },
      "LinkEnum": {
        "enum": [
          "FRIEND",
          "GRAND_PARENT",
          "BROTHER",
          "UNCLE",
          "DIVORCED_PARENT",
          "OTHER"
        ],
        "type": "string",
        "description": "* `FRIEND` - Friend\n* `GRAND_PARENT` - Grand Parent\n* `BROTHER` - Brother\n* `UNCLE` - Uncle\n* `DIVORCED_PARENT` - Divorced Parent\n* `OTHER` - Other"
      },
      "NTypeEnum": {
        "enum": [
          "CHAT",
          "COMMENT",
          "PUBLICATION",
          "CUSTOM"
        ],
        "type": "string",
        "description": "* `CHAT` - CHAT\n* `COMMENT` - COMMENT\n* `PUBLICATION` - PUBLICATION\n* `CUSTOM` - CUSTOM"
      },
      "Nested": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "phone": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "date_joined": {
            "type": "string",
            "format": "date-time"
          },
          "polymorphic_ctype": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "user": {
            "type": "integer"
          }
        },
        "required": [
          "birth_date",
          "first_name",
          "id",
          "last_name",
          "polymorphic_ctype",
          "sex",
          "user"
        ]
      },
      "NestedRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "phone": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "date_joined": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "integer"
          }
        },
        "required": [
          "birth_date",
          "first_name",
          "last_name",
          "sex",
          "user"
        ]
      },
      "NotificationSerializerCreate": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "message": {
            "type": "string"
          },
          "subject": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "message",
          "subject",
          "users"
        ]
      },
      "NotificationSerializerCreateRequest": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "message": {
            "type": "string",
            "minLength": 1
          },
          "subject": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          }
        },
        "required": [
          "message",
          "subject",
          "users"
        ]
      },
      "NotificationSerializerUserReadOnly": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "subject": {
            "type": "string",
            "maxLength": 255
          },
          "message": {
            "type": "string"
          },
          "n_type": {
            "$ref": "#/components/schemas/NTypeEnum"
          },
          "optional_data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "user": {
            "type": "integer"
          },
          "created_by": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "created",
          "id",
          "message",
          "n_type",
          "subject",
          "user"
        ]
      },
      "NullEnum": {
        "enum": [
          null
        ]
      },
      "PaginatedChildList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Child"
            }
          }
        }
      },
      "PaginatedChildMedicalFileAllergyList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMedicalFileAllergy"
            }
          }
        }
      },
      "PaginatedChildMedicalFileDefaultAllergyList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMedicalFileDefaultAllergy"
            }
          }
        }
      },
      "PaginatedChildMedicalFileDefaultMedicalConditionList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMedicalFileDefaultMedicalCondition"
            }
          }
        }
      },
      "PaginatedChildMedicalFileDefaultMedicationList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMedicalFileDefaultMedication"
            }
          }
        }
      },
      "PaginatedChildMedicalFileList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMedicalFile"
            }
          }
        }
      },
      "PaginatedChildMedicalFileMedicalConditionList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMedicalFileMedicalCondition"
            }
          }
        }
      },
      "PaginatedChildMedicalFileMedicationList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMedicalFileMedication"
            }
          }
        }
      },
      "PaginatedChildNotesList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildNotes"
            }
          }
        }
      },
      "PaginatedCommentList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        }
      },
      "PaginatedDocOnlyPublicationContentList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocOnlyPublicationContent"
            }
          }
        }
      },
      "PaginatedEducatorContractList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducatorContract"
            }
          }
        }
      },
      "PaginatedEducatorProfileList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducatorProfile"
            }
          }
        }
      },
      "PaginatedEducatorSignupByKindergartenListList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducatorSignupByKindergartenList"
            }
          }
        }
      },
      "PaginatedFamilyList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Family"
            }
          }
        }
      },
      "PaginatedFamilySignupByKindergartenListList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FamilySignupByKindergartenList"
            }
          }
        }
      },
      "PaginatedInscriptionList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Inscription"
            }
          }
        }
      },
      "PaginatedKindergartenProfileReadList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfileRead"
            }
          }
        }
      },
      "PaginatedNotificationSerializerUserReadOnlyList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationSerializerUserReadOnly"
            }
          }
        }
      },
      "PaginatedParentInvitationInfoList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParentInvitationInfo"
            }
          }
        }
      },
      "PaginatedParentProfileList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParentProfile"
            }
          }
        }
      },
      "PaginatedPublicationList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Publication"
            }
          }
        }
      },
      "PaginatedTrustedPersonList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrustedPerson"
            }
          }
        }
      },
      "Parent": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email address",
            "maxLength": 254
          },
          "is_email_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "parentprofile": {
            "readOnly": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ParentProfile"
              },
              {
                "type": "integer"
              }
            ]
          },
          "signature": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "email",
          "id",
          "is_email_verified",
          "parentprofile"
        ]
      },
      "ParentInvitationInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 320
          },
          "family": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "email",
          "id"
        ]
      },
      "ParentInvitationInitiateRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "maxLength": 320
          },
          "family": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "email"
        ]
      },
      "ParentInvitationRegistrationRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ParentInvitationRequest"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          }
        },
        "required": [
          "address",
          "birth_date",
          "first_name",
          "last_name",
          "phone",
          "sex",
          "user"
        ]
      },
      "ParentInvitationRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "password1": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "password2": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          }
        },
        "required": [
          "password1",
          "password2"
        ]
      },
      "ParentProfile": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "$ref": "#/components/schemas/Parent"
          },
          "phone": {
            "$ref": "#/components/schemas/Phone"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "family_id": {
            "type": "string",
            "readOnly": true
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "date_joined": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "address",
          "birth_date",
          "family_id",
          "first_name",
          "id",
          "last_name",
          "phone",
          "sex",
          "user"
        ]
      },
      "ParentProfileRequest": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ParentRequest"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "date_joined": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "address",
          "birth_date",
          "first_name",
          "last_name",
          "phone",
          "sex",
          "user"
        ]
      },
      "ParentRegistrationRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ParentRegistrationUserRequest"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "address",
          "birth_date",
          "first_name",
          "last_name",
          "phone",
          "sex",
          "user"
        ]
      },
      "ParentRegistrationUserRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "title": "Email address",
            "maxLength": 254
          },
          "password1": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "password2": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          }
        },
        "required": [
          "email",
          "password1",
          "password2"
        ]
      },
      "ParentRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "title": "Email address",
            "maxLength": 254
          },
          "password1": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "password2": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "signature": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "email",
          "password1",
          "password2"
        ]
      },
      "ParentSignupByKindergartenList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "parent": {
            "type": "integer"
          },
          "accepted": {
            "type": "boolean"
          },
          "sent": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "parent"
        ]
      },
      "PasswordChangeRequest": {
        "type": "object",
        "properties": {
          "new_password1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          },
          "new_password2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          }
        },
        "required": [
          "new_password1",
          "new_password2"
        ]
      },
      "PasswordResetRequest": {
        "type": "object",
        "description": "Serializer for requesting a password reset e-mail.",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          }
        },
        "required": [
          "email"
        ]
      },
      "PatchedChildMedicalFileAllergyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "maxLength": 128
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityEnum"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "comments": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          }
        }
      },
      "PatchedChildMedicalFileMedicalConditionRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityEnum"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "comments": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          }
        }
      },
      "PatchedChildMedicalFileMedicationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "maxLength": 128
          },
          "description": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "comments": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          }
        }
      },
      "PatchedChildNotesRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "child": {
            "type": "integer"
          },
          "description": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "PatchedChildRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "family": {
            "type": "integer"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "medical_file": {
            "$ref": "#/components/schemas/ChildMedicalFileRequest"
          }
        }
      },
      "PatchedCommentSerializerUpdateRequest": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "content": {
            "type": "string",
            "minLength": 1
          },
          "tag_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagUserRequest"
            }
          },
          "tag_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagGroupRequest"
            }
          }
        }
      },
      "PatchedEducatorContractUpdateRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "status_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusActionEnum"
              }
            ],
            "writeOnly": true
          },
          "status_date": {
            "type": "string",
            "format": "date-time",
            "writeOnly": true
          }
        }
      },
      "PatchedEducatorProfileRequest": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/EducatorRequest"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "date_joined": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PatchedInscriptionUpdateRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "schedule": {
            "$ref": "#/components/schemas/_InscriptionWeeklyChildScheduleRequest"
          },
          "status_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusActionEnum"
              }
            ],
            "writeOnly": true
          },
          "status_date": {
            "type": "string",
            "format": "date-time",
            "writeOnly": true
          }
        }
      },
      "PatchedKindergartenProfileRequest": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "phone_1": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "phone_2": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "email_1": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "minLength": 1,
            "maxLength": 254
          },
          "email_2": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "minLength": 1,
            "maxLength": 254
          },
          "child_care_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChildCareTypeEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "website": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "minLength": 1,
            "maxLength": 200
          },
          "presentation_of_kindergarten": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "description_of_services": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "educational_program": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "service_schedule": {
            "$ref": "#/components/schemas/KindergartenProfile_ServiceScheduleRequest"
          },
          "tariffs": {
            "$ref": "#/components/schemas/KindergartenProfile_TariffsRequest"
          },
          "typical_day": {
            "$ref": "#/components/schemas/KindergartenProfile_TypicalDayRequest"
          },
          "menu": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_ClassRequest"
            }
          },
          "places_availability": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindergartenProfile_PlacesAvailabilityRequest"
            }
          },
          "accomodation_for_special_kids": {
            "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodationRequest",
            "oneOf": [
              {
                "$ref": "#/components/schemas/KindergartenProfile_SpecialKidsAccomodationRequest"
              },
              {
                "type": "integer"
              }
            ]
          },
          "admission_policy": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "user": {
            "$ref": "#/components/schemas/BaseProfile_UserRequest"
          },
          "gallery_images": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileCollection"
              }
            ],
            "nullable": true
          }
        }
      },
      "PatchedKindergartenProfile_SettingsRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "email_1": {
            "type": "boolean"
          },
          "email_2": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "address": {
            "type": "boolean"
          },
          "phone_1": {
            "type": "boolean"
          },
          "phone_2": {
            "type": "boolean"
          },
          "website": {
            "type": "boolean"
          },
          "presentation_of_kindergarten": {
            "type": "boolean"
          },
          "description_of_services": {
            "type": "boolean"
          },
          "educational_program": {
            "type": "boolean"
          },
          "typical_day": {
            "type": "boolean"
          },
          "menu": {
            "type": "boolean"
          },
          "classes": {
            "type": "boolean"
          },
          "places_availability": {
            "type": "boolean"
          },
          "accomodation_for_special_kids": {
            "type": "boolean"
          },
          "admission_policy": {
            "type": "boolean"
          },
          "service_schedule": {
            "type": "boolean"
          },
          "tariffs": {
            "type": "boolean"
          }
        }
      },
      "PatchedParentProfileRequest": {
        "type": "object",
        "description": "Adds update nested feature",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ParentRequest"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "date_joined": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PatchedPublicationUpdateRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "content": {
            "type": "object",
            "additionalProperties": {}
          },
          "publicized": {
            "type": "boolean"
          },
          "tag_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagUserRequest"
            }
          },
          "tag_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagGroupRequest"
            }
          },
          "qa_vote": {
            "$ref": "#/components/schemas/_QAVoteRequest"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_PublicationFileRequest"
            }
          }
        }
      },
      "PatchedTrustedPersonRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "date_joined": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "minLength": 1,
            "maxLength": 254
          },
          "link": {
            "$ref": "#/components/schemas/LinkEnum"
          },
          "pickup_code": {
            "type": "string",
            "minLength": 1,
            "maxLength": 6
          },
          "family": {
            "type": "integer"
          }
        }
      },
      "Phone": {
        "type": "object",
        "properties": {
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KindEnum"
              }
            ],
            "description": "Phone's kind\n\n* `LANDLINE` - LANDLINE\n* `CELLPHONE` - CELLPHONE"
          },
          "number": {
            "type": "string",
            "description": "Phone's number",
            "pattern": "\\d{3}-\\d{3}-\\d{4}"
          }
        },
        "required": [
          "kind",
          "number"
        ]
      },
      "PhoneRequest": {
        "type": "object",
        "properties": {
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KindEnum"
              }
            ],
            "description": "Phone's kind\n\n* `LANDLINE` - LANDLINE\n* `CELLPHONE` - CELLPHONE"
          },
          "number": {
            "type": "string",
            "minLength": 1,
            "description": "Phone's number",
            "pattern": "\\d{3}-\\d{3}-\\d{4}"
          }
        },
        "required": [
          "kind",
          "number"
        ]
      },
      "PollPublicationContent": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "required": [
          "content"
        ]
      },
      "PostPublicationContent": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "required": [
          "content"
        ]
      },
      "PrimaryContactEnum": {
        "enum": [
          "PARENT1",
          "PARENT2"
        ],
        "type": "string",
        "description": "* `PARENT1` - PARENT1\n* `PARENT2` - PARENT2"
      },
      "Publication": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "content": {
            "type": "object",
            "additionalProperties": {}
          },
          "type_version": {
            "type": "string"
          },
          "created_by_user": {
            "type": "integer",
            "readOnly": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "date_modified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "publicized": {
            "type": "boolean"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            },
            "readOnly": true
          },
          "reactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicationReaction"
            },
            "readOnly": true
          },
          "tag_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagUser"
            }
          },
          "tag_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagGroup"
            }
          },
          "qa_vote": {
            "$ref": "#/components/schemas/_QAVote"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_PublicationFile"
            }
          }
        },
        "required": [
          "comments",
          "created_by_user",
          "date_created",
          "date_modified",
          "id",
          "reactions",
          "type_version"
        ]
      },
      "PublicationReaction": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "type": "integer",
            "readOnly": true
          },
          "publication": {
            "type": "integer"
          },
          "reaction": {
            "$ref": "#/components/schemas/ReactionEnum"
          }
        },
        "required": [
          "id",
          "publication",
          "reaction",
          "user"
        ]
      },
      "PublicationReactionRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "publication": {
            "type": "integer"
          },
          "reaction": {
            "$ref": "#/components/schemas/ReactionEnum"
          }
        },
        "required": [
          "publication",
          "reaction"
        ]
      },
      "PublicationRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "content": {
            "type": "object",
            "additionalProperties": {}
          },
          "type_version": {
            "type": "string",
            "minLength": 1
          },
          "publicized": {
            "type": "boolean"
          },
          "tag_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagUserRequest"
            }
          },
          "tag_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagGroupRequest"
            }
          },
          "qa_vote": {
            "$ref": "#/components/schemas/_QAVoteRequest"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_PublicationFileRequest"
            }
          }
        },
        "required": [
          "type_version"
        ]
      },
      "PublicationUpdate": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "content": {
            "type": "object",
            "additionalProperties": {}
          },
          "type_version": {
            "type": "string",
            "readOnly": true
          },
          "created_by_user": {
            "type": "integer",
            "readOnly": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "date_modified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "publicized": {
            "type": "boolean"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            },
            "readOnly": true
          },
          "reactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicationReaction"
            },
            "readOnly": true
          },
          "tag_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagUser"
            }
          },
          "tag_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagGroup"
            }
          },
          "qa_vote": {
            "$ref": "#/components/schemas/_QAVote"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_PublicationFile"
            }
          }
        },
        "required": [
          "comments",
          "created_by_user",
          "date_created",
          "date_modified",
          "id",
          "reactions",
          "type_version"
        ]
      },
      "PublicationUpdateRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "content": {
            "type": "object",
            "additionalProperties": {}
          },
          "publicized": {
            "type": "boolean"
          },
          "tag_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagUserRequest"
            }
          },
          "tag_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_TagGroupRequest"
            }
          },
          "qa_vote": {
            "$ref": "#/components/schemas/_QAVoteRequest"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_PublicationFileRequest"
            }
          }
        }
      },
      "QAUserVote": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "type": "integer",
            "readOnly": true
          },
          "choice": {
            "type": "integer"
          }
        },
        "required": [
          "choice",
          "id",
          "user"
        ]
      },
      "QAUserVoteRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "choice": {
            "type": "integer"
          }
        },
        "required": [
          "choice"
        ]
      },
      "ReactionEnum": {
        "enum": [
          "LIKED",
          "DISLIKED"
        ],
        "type": "string",
        "description": "* `LIKED` - Liked\n* `DISLIKED` - Disliked"
      },
      "Request": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer"
          },
          "params_to_sign": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "params_to_sign",
          "timestamp"
        ]
      },
      "Response": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "RestAuthDetail": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "detail"
        ]
      },
      "SeverityEnum": {
        "enum": [
          "SEVERE",
          "MODERATE",
          "MILD"
        ],
        "type": "string",
        "description": "* `SEVERE` - severe\n* `MODERATE` - moderate\n* `MILD` - mild"
      },
      "SexEnum": {
        "enum": [
          "MALE",
          "FEMALE"
        ],
        "type": "string",
        "description": "* `MALE` - Male\n* `FEMALE` - Female"
      },
      "StatusActionEnum": {
        "enum": [
          "accept",
          "decline",
          "renew",
          "terminate"
        ],
        "type": "string",
        "description": "* `accept` - accept\n* `decline` - decline\n* `renew` - renew\n* `terminate` - terminate"
      },
      "SubTypeEnum": {
        "enum": [
          "Mood",
          "Sleep",
          "Hunger",
          "Pooping",
          "Activities",
          "Participation",
          "Humor"
        ],
        "type": "string",
        "description": "* `Mood` - Mood\n* `Sleep` - Sleep\n* `Hunger` - Hunger\n* `Pooping` - Pooping\n* `Activities` - Activities\n* `Participation` - Participation\n* `Humor` - Humor"
      },
      "TokenRefresh": {
        "type": "object",
        "properties": {
          "access": {
            "type": "string",
            "readOnly": true
          },
          "refresh": {
            "type": "string"
          }
        },
        "required": [
          "access",
          "refresh"
        ]
      },
      "TokenRefreshRequest": {
        "type": "object",
        "properties": {
          "refresh": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "refresh"
        ]
      },
      "TokenVerifyRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          }
        },
        "required": [
          "token"
        ]
      },
      "TokenVerifyResponse": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          }
        },
        "required": [
          "detail"
        ]
      },
      "TrustedPerson": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/Phone"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "date_joined": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "maxLength": 254
          },
          "link": {
            "$ref": "#/components/schemas/LinkEnum"
          },
          "pickup_code": {
            "type": "string",
            "maxLength": 6
          },
          "family": {
            "type": "integer"
          }
        },
        "required": [
          "address",
          "birth_date",
          "family",
          "first_name",
          "id",
          "last_name",
          "link",
          "phone",
          "sex"
        ]
      },
      "TrustedPersonRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "date_joined": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "minLength": 1,
            "maxLength": 254
          },
          "link": {
            "$ref": "#/components/schemas/LinkEnum"
          },
          "pickup_code": {
            "type": "string",
            "minLength": 1,
            "maxLength": 6
          },
          "family": {
            "type": "integer"
          }
        },
        "required": [
          "address",
          "birth_date",
          "family",
          "first_name",
          "last_name",
          "link",
          "phone",
          "sex"
        ]
      },
      "TypeEnum": {
        "enum": [
          "Full time",
          "Part time"
        ],
        "type": "string",
        "description": "* `Full time` - Full time\n* `Part time` - Part time"
      },
      "VerifyEmailRequest": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          }
        },
        "required": [
          "key"
        ]
      },
      "VerifyEmailResponse": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          }
        },
        "required": [
          "detail"
        ]
      },
      "_EducatorContractRegistrationEducatorRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/_EducatorContractRegistrationEducatorUserRequest"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "address",
          "birth_date",
          "first_name",
          "last_name",
          "phone",
          "sex",
          "user"
        ]
      },
      "_EducatorContractRegistrationEducatorUserRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "title": "Email address",
            "maxLength": 254
          }
        },
        "required": [
          "email"
        ]
      },
      "_InscriptionChild": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "deleted": {
            "type": "boolean",
            "readOnly": true
          },
          "family": {
            "type": "integer",
            "readOnly": true
          },
          "first_name": {
            "type": "string",
            "maxLength": 100
          },
          "last_name": {
            "type": "string",
            "maxLength": 100
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "medical_file": {
            "$ref": "#/components/schemas/ChildMedicalFile"
          }
        },
        "required": [
          "birth_date",
          "deleted",
          "family",
          "first_name",
          "id",
          "last_name",
          "medical_file",
          "sex"
        ]
      },
      "_InscriptionChildRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          },
          "medical_file": {
            "$ref": "#/components/schemas/ChildMedicalFileRequest"
          }
        },
        "required": [
          "birth_date",
          "first_name",
          "last_name",
          "medical_file",
          "sex"
        ]
      },
      "_InscriptionRegistrationFamilyRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "parent1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/_InscriptionRegistrationParentRequest"
              }
            ],
            "writeOnly": true
          },
          "parent2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/_InscriptionRegistrationParentRequest"
              }
            ],
            "writeOnly": true
          }
        },
        "required": [
          "parent1"
        ]
      },
      "_InscriptionRegistrationParentRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/_InscriptionRegistrationParentUserRequest"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneRequest"
          },
          "address": {
            "$ref": "#/components/schemas/AddressRequest"
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "avatar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "address",
          "birth_date",
          "first_name",
          "last_name",
          "phone",
          "sex",
          "user"
        ]
      },
      "_InscriptionRegistrationParentUserRequest": {
        "type": "object",
        "description": "A ModelSerializer that takes additional arguments for\n\"fields\", \"omit\" and \"expand\" in order to\ncontrol which fields are displayed, and whether to replace simple\nvalues with complex, nested serializations",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "title": "Email address",
            "maxLength": 254
          }
        },
        "required": [
          "email"
        ]
      },
      "_InscriptionWeeklyChildSchedule": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "monday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "monday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "tuesday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "tuesday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "wednesday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "wednesday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "thursday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "thursday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "friday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "friday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "saturday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "saturday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "sunday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "sunday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          }
        },
        "required": [
          "id"
        ]
      },
      "_InscriptionWeeklyChildScheduleRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "monday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "monday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "tuesday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "tuesday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "wednesday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "wednesday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "thursday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "thursday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "friday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "friday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "saturday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "saturday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "sunday_start": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "sunday_end": {
            "type": "string",
            "format": "time",
            "nullable": true
          }
        }
      },
      "_PublicationFile": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "file": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "file",
          "id"
        ]
      },
      "_PublicationFileRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "file"
        ]
      },
      "_QAChoice": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "choice": {
            "type": "string",
            "maxLength": 255
          },
          "user_votes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QAUserVote"
            },
            "readOnly": true
          },
          "user_votes_count": {
            "type": "integer",
            "readOnly": true
          }
        },
        "required": [
          "choice",
          "id",
          "user_votes",
          "user_votes_count"
        ]
      },
      "_QAChoiceRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "choice": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          }
        },
        "required": [
          "choice"
        ]
      },
      "_QAVote": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_QAChoice"
            }
          },
          "most_popular_choice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/_QAChoice"
              }
            ],
            "readOnly": true
          },
          "question": {
            "type": "string"
          },
          "multi_choice": {
            "type": "boolean"
          }
        },
        "required": [
          "choices",
          "id",
          "most_popular_choice",
          "question"
        ]
      },
      "_QAVoteRequest": {
        "type": "object",
        "description": "Adds nested create feature",
        "properties": {
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_QAChoiceRequest"
            }
          },
          "question": {
            "type": "string",
            "minLength": 1
          },
          "multi_choice": {
            "type": "boolean"
          }
        },
        "required": [
          "choices",
          "question"
        ]
      },
      "_Question": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "answer": {
            "type": "integer",
            "maximum": 5,
            "minimum": 1
          },
          "rating": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1
          },
          "notes": {
            "type": "string"
          },
          "sub_type": {
            "$ref": "#/components/schemas/SubTypeEnum"
          }
        },
        "required": [
          "answer",
          "notes",
          "rating",
          "text"
        ]
      },
      "_TagGroup": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "tagged_group": {
            "type": "integer"
          }
        },
        "required": [
          "tagged_group"
        ]
      },
      "_TagGroupRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "tagged_group": {
            "type": "integer"
          }
        },
        "required": [
          "tagged_group"
        ]
      },
      "_TagUser": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "tagged_user": {
            "type": "integer"
          }
        },
        "required": [
          "tagged_user"
        ]
      },
      "_TagUserRequest": {
        "type": "object",
        "description": "Required for all serializers that are nested under BaseNestedModelSerializer.",
        "properties": {
          "tagged_user": {
            "type": "integer"
          }
        },
        "required": [
          "tagged_user"
        ]
      },
      "loginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "minLength": 1,
            "maxLength": 40
          }
        },
        "required": [
          "email",
          "password"
        ]
      }
    },
    "securitySchemes": {
      "jwtCookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "jwt-auth"
      },
      "jwtHeaderAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}